// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package weixin_service

import (
	"context"

	"github.com/gogf/gf/v2/frame/g"
	"github.com/kysion/base-library/base_hook"
	"github.com/kysion/weixin-library/weixin_model"
	hook "github.com/kysion/weixin-library/weixin_model/weixin_hook"
)

type (
	IAppAuth interface {
		RefreshToken(ctx context.Context, merchantAppId, thirdAppId string) (bool, error)
		AppAuth(ctx context.Context, info g.Map) bool
		Authorized(ctx context.Context, info g.Map) bool
		UpdateAuthorized(ctx context.Context, info g.Map) bool
		Unauthorized(ctx context.Context, info g.Map) bool
	}
	IUserAuth interface {
		InstallConsumerHook(infoType hook.ConsumerKey, hookFunc hook.ConsumerHookFunc)
		GetHook() base_hook.BaseHook[hook.ConsumerKey, hook.ConsumerHookFunc]
		UserAuthCallback(ctx context.Context, info g.Map) bool
		UserLogin(ctx context.Context, info g.Map) (string, error)
		GetTinyAppUserInfo(ctx context.Context, sessionKey, encryptedData, iv, appId string) (*weixin_model.UserInfoRes, error)
	}
)

var (
	localAppAuth  IAppAuth
	localUserAuth IUserAuth
)

func AppAuth() IAppAuth {
	if localAppAuth == nil {
		panic("implement not found for interface IAppAuth, forgot register?")
	}
	return localAppAuth
}

func RegisterAppAuth(i IAppAuth) {
	localAppAuth = i
}

func UserAuth() IUserAuth {
	if localUserAuth == nil {
		panic("implement not found for interface IUserAuth, forgot register?")
	}
	return localUserAuth
}

func RegisterUserAuth(i IUserAuth) {
	localUserAuth = i
}
