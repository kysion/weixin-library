// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package weixin_service

import (
	"context"

	"github.com/gogf/gf/v2/frame/g"
	"github.com/kysion/weixin-library/weixin_model"
	"github.com/kysion/weixin-library/weixin_model/weixin_enum"
	"github.com/kysion/weixin-library/weixin_model/weixin_hook"
)

type (
	IGateway interface {
		InstallHook(infoType weixin_enum.InfoType, hookFunc weixin_hook.ServiceMsgHookFunc)
		Services(ctx context.Context, eventInfo *weixin_model.EventEncryptMsgReq, msgInfo *weixin_model.MessageEncryptReq)
		Callback(ctx context.Context, info *weixin_model.AuthorizationCodeRes, eventInfo *weixin_model.EventEncryptMsgReq, msgInfo *weixin_model.MessageEncryptReq)
		WXCheckSignature(ctx context.Context, signature, timestamp, nonce, echostr string) string
	}
	ITicket interface {
		Ticket(ctx context.Context, info g.Map) bool
	}
	IConsumer interface {
		GetConsumerById(ctx context.Context, id int64) (*weixin_model.WeixinConsumerConfig, error)
		GetConsumerBySysUserId(ctx context.Context, sysUserId int64) (*weixin_model.WeixinConsumerConfig, error)
		CreateConsumer(ctx context.Context, info weixin_model.WeixinConsumerConfig) (*weixin_model.WeixinConsumerConfig, error)
		UpdateConsumer(ctx context.Context, id int64, info weixin_model.UpdateConsumerReq) (bool, error)
		UpdateConsumerState(ctx context.Context, id int64, state int) (bool, error)
	}
	IMerchantAppConfig interface {
		GetMerchantAppConfigById(ctx context.Context, id int64) (*weixin_model.WeixinMerchantAppConfig, error)
		GetMerchantAppConfigBySysUserId(ctx context.Context, sysUserId int64) (*weixin_model.WeixinMerchantAppConfig, error)
		CreateMerchantAppConfig(ctx context.Context, info weixin_model.WeixinMerchantAppConfig) (*weixin_model.WeixinMerchantAppConfig, error)
		UpdateMerchantAppConfig(ctx context.Context, id int64, info weixin_model.UpdateMerchantAppConfig) (bool, error)
		UpdateMerchantAppConfigAuthState(ctx context.Context, id int64, authState int) (bool, error)
	}
	IThirdAppConfig interface {
		GetThirdAppConfigByAppId(ctx context.Context, id string) (*weixin_model.WeixinThirdAppConfig, error)
		GetThirdAppConfigById(ctx context.Context, id int64) (*weixin_model.WeixinThirdAppConfig, error)
		CreateThirdAppConfig(ctx context.Context, info *weixin_model.WeixinThirdAppConfig) (*weixin_model.WeixinThirdAppConfig, error)
		UpdateThirdAppConfig(ctx context.Context, id int64, info *weixin_model.UpdateThirdAppConfig) (bool, error)
		UpdateReleaseState(ctx context.Context, id int64, releaseState int) (bool, error)
		UpdateState(ctx context.Context, id int64, state int) (bool, error)
		UpdateAppAuthToken(ctx context.Context, info *weixin_model.UpdateAppAuthToken) (bool, error)
		UpdateAppConfig(ctx context.Context, info *weixin_model.UpdateThirdAppConfigReq) (bool, error)
		UpdateAppConfigHttps(ctx context.Context, info *weixin_model.UpdateThirdAppConfigHttpsReq) (bool, error)
	}
)

var (
	localMerchantAppConfig IMerchantAppConfig
	localThirdAppConfig    IThirdAppConfig
	localGateway           IGateway
	localTicket            ITicket
	localConsumer          IConsumer
)

func Gateway() IGateway {
	if localGateway == nil {
		panic("implement not found for interface IGateway, forgot register?")
	}
	return localGateway
}

func RegisterGateway(i IGateway) {
	localGateway = i
}

func Ticket() ITicket {
	if localTicket == nil {
		panic("implement not found for interface ITicket, forgot register?")
	}
	return localTicket
}

func RegisterTicket(i ITicket) {
	localTicket = i
}

func Consumer() IConsumer {
	if localConsumer == nil {
		panic("implement not found for interface IConsumer, forgot register?")
	}
	return localConsumer
}

func RegisterConsumer(i IConsumer) {
	localConsumer = i
}

func MerchantAppConfig() IMerchantAppConfig {
	if localMerchantAppConfig == nil {
		panic("implement not found for interface IMerchantAppConfig, forgot register?")
	}
	return localMerchantAppConfig
}

func RegisterMerchantAppConfig(i IMerchantAppConfig) {
	localMerchantAppConfig = i
}

func ThirdAppConfig() IThirdAppConfig {
	if localThirdAppConfig == nil {
		panic("implement not found for interface IThirdAppConfig, forgot register?")
	}
	return localThirdAppConfig
}

func RegisterThirdAppConfig(i IThirdAppConfig) {
	localThirdAppConfig = i
}
